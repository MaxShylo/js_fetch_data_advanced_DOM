{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","DETAILS","body","document","querySelector","createList","className","headerText","detail","createElement","header","innerText","append","insertBefore","lastElementChild","createListItem","id","nameOfPhone","phone","requestIds","fetch","then","response","json","phones","phonesIds","map","getFirstReceivedDetails","fastestDetails","name","catch","error","Error","getAllSuccessfulDetails","details","forEach","getThreeFastestDetails","listOfThreeFastest","style","position","top","left","backgroundColor","padding","borderRadius","ids","Promise","race","replace","all","listOfdetails"],"mappings":";AAAA,aAEA,IAAMA,EAAW,wEAEXC,EAAU,iFAGVC,EAAOC,SAASC,cAAc,QAE9BC,EAAa,SAACC,EAAWC,GACvBC,IAAAA,EAASL,SAASM,cAAc,MAChCC,EAASP,SAASM,cAAc,MAEtCD,EAAOF,UAAYA,EACnBI,EAAOC,UAAYJ,EACnBC,EAAOI,OAAOF,GACdR,EAAKW,aAAaL,EAAQN,EAAKY,mBAG3BC,EAAiB,SAACC,EAAIC,EAAaX,GACjCY,IAAAA,EAAQf,SAASM,cAAc,MAErCS,EAAMP,UAAmBK,OAAAA,OAAAA,EAAYC,WAAAA,OAAAA,GACrCf,EAAKE,cAAkBE,IAAAA,OAAAA,IAAaM,OAAOM,IAG7C,SAASC,IACAC,OAAAA,MAAMpB,GACVqB,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAG,GACEC,IAAAA,EAAYD,EAAOE,IAAI,SAAAR,GAASA,OAAAA,EAAMF,KAE5CW,EAAwBF,GACrBJ,KAAK,SAAAO,GACJvB,EAAW,iBAAkB,kBAE7BU,EAAea,EAAeZ,GAAIY,EAAeC,KAC/C,oBAEHC,MAAM,SAAAC,GAAS,OAAA,IAAIC,MAAMD,KAE5BE,EAAwBR,GACrBJ,KAAK,SAAAa,GACJ7B,EAAW,iBAAkB,kBAE7B6B,EAAQC,QAAQ,SAAA3B,GACdO,EAAeP,EAAOQ,GAAIR,EAAOqB,KAAM,sBAI7CO,EAAuBX,GACpBJ,KAAK,SAAAa,GACJ7B,EAAW,2BAA4B,4BAEjCgC,IAAAA,EACFnC,EAAKE,cAAc,6BAEvBiC,EAAmBC,MAAMC,SAAW,WACpCF,EAAmBC,MAAME,IAAM,MAC/BH,EAAmBC,MAAMG,KAAO,OAChCJ,EAAmBC,MAAMI,gBAAkB,SAC3CL,EAAmBC,MAAMK,QAAU,OACnCN,EAAmBC,MAAMM,aAAe,OAExCV,EAAQC,QAAQ,SAAA3B,GACdO,EAAeP,EAAOQ,GAAIR,EAAOqB,KAAM,gCAG1CC,MAAM,SAAAC,GAAS,OAAA,IAAIC,MAAMD,OAIlC,SAASJ,EAAwBkB,GACxBC,OAAAA,QAAQC,KAAKF,EAAInB,IAAI,SAAAV,GACnBI,OAAAA,MAAMnB,EAAQ+C,QAAQ,WAAYhC,IACtCK,KAAK,SAAAa,GAAWA,OAAAA,EAAQX,YAI/B,SAASU,EAAwBY,GACxBC,OAAAA,QAAQG,IAAIJ,EAAInB,IAAI,SAAAV,GAClBI,OAAAA,MAAMnB,EAAQ+C,QAAQ,WAAYhC,IACtCK,KAAK,SAAAa,GAAWA,OAAAA,EAAQX,YAI/B,SAASa,EAAuBS,GACxBK,IAAAA,EAAgBL,EAAInB,IAAI,SAAAV,GACrBI,OAAAA,MAAMnB,EAAQ+C,QAAQ,WAAYhC,IACtCK,KAAK,SAAAa,GAAWA,OAAAA,EAAQX,WAGtBuB,OAAAA,QAAQG,IAAI,CACjBH,QAAQC,KAAKG,GACbJ,QAAQC,KAAKG,GACbJ,QAAQC,KAAKG,KAIjB/B","file":"main.a99016e5.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst BASE_URL = 'https://mate-academy.github.io/'\n  + 'phone-catalogue-static/api/phones.json';\nconst DETAILS = 'https://mate-academy.github.io/'\n  + 'phone-catalogue-static/api/phones/:phoneId.json';\n\nconst body = document.querySelector('body');\n\nconst createList = (className, headerText) => {\n  const detail = document.createElement('ul');\n  const header = document.createElement('h1');\n\n  detail.className = className;\n  header.innerText = headerText;\n  detail.append(header);\n  body.insertBefore(detail, body.lastElementChild);\n};\n\nconst createListItem = (id, nameOfPhone, className) => {\n  const phone = document.createElement('li');\n\n  phone.innerText = `ID: ${id} NAME: ${nameOfPhone}`;\n  body.querySelector(`.${className}`).append(phone);\n};\n\nfunction requestIds() {\n  return fetch(BASE_URL)\n    .then(response => response.json())\n    .then(phones => {\n      const phonesIds = phones.map(phone => phone.id);\n\n      getFirstReceivedDetails(phonesIds)\n        .then(fastestDetails => {\n          createList('first-received', 'First Received');\n\n          createListItem(fastestDetails.id, fastestDetails.name,\n            'first-received');\n        })\n        .catch(error => new Error(error));\n\n      getAllSuccessfulDetails(phonesIds)\n        .then(details => {\n          createList('all-successful', 'All Successful');\n\n          details.forEach(detail => {\n            createListItem(detail.id, detail.name, 'all-successful');\n          });\n        });\n\n      getThreeFastestDetails(phonesIds)\n        .then(details => {\n          createList('three-fastest-successful', 'Three Fastest Successful');\n\n          const listOfThreeFastest\n            = body.querySelector('.three-fastest-successful');\n\n          listOfThreeFastest.style.position = 'absolute';\n          listOfThreeFastest.style.top = '60%';\n          listOfThreeFastest.style.left = '50px';\n          listOfThreeFastest.style.backgroundColor = 'orange';\n          listOfThreeFastest.style.padding = '15px';\n          listOfThreeFastest.style.borderRadius = '15px';\n\n          details.forEach(detail => {\n            createListItem(detail.id, detail.name, 'three-fastest-successful');\n          });\n        })\n        .catch(error => new Error(error));\n    });\n};\n\nfunction getFirstReceivedDetails(ids) {\n  return Promise.race(ids.map(id => {\n    return fetch(DETAILS.replace(':phoneId', id))\n      .then(details => details.json());\n  }));\n};\n\nfunction getAllSuccessfulDetails(ids) {\n  return Promise.all(ids.map(id => {\n    return fetch(DETAILS.replace(':phoneId', id))\n      .then(details => details.json());\n  }));\n};\n\nfunction getThreeFastestDetails(ids) {\n  const listOfdetails = ids.map(id => {\n    return fetch(DETAILS.replace(':phoneId', id))\n      .then(details => details.json());\n  });\n\n  return Promise.all([\n    Promise.race(listOfdetails),\n    Promise.race(listOfdetails),\n    Promise.race(listOfdetails),\n  ]);\n};\n\nrequestIds();\n"]}